[{"C:\\Users\\KZ\\superchat\\src\\index.js":"1","C:\\Users\\KZ\\superchat\\src\\reportWebVitals.js":"2","C:\\Users\\KZ\\superchat\\src\\App.js":"3"},{"size":499,"mtime":1607006502585,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":2899,"mtime":1607006044411,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1sztutq",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"C:\\Users\\KZ\\superchat\\src\\index.js",[],["17","18"],"C:\\Users\\KZ\\superchat\\src\\reportWebVitals.js",[],["19","20"],"C:\\Users\\KZ\\superchat\\src\\App.js",["21","22","23","24"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCfaijbDDi3ZWXKPxiZxtN6LmvZIUJd_h8\",\n  authDomain: \"intchatappab.firebaseapp.com\",\n  databaseURL: \"https://intchatappab.firebaseio.com\",\n  projectId: \"intchatappab\",\n  storageBucket: \"intchatappab.appspot.com\",\n  messagingSenderId: \"468818513389\",\n  appId: \"1:468818513389:web:438893f11d7ce7d630abe4\",\n  measurementId: \"G-Z9R4EVDXGM\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>‚öõÔ∏èüî•üí¨</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom(){\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n      <span ref={dummy}></span>\n    </main>\n    <form onSubmit={sendMessage}>\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n      <button type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\n    </form>\n  </>)\n}\n\n\n\n\n\nfunction ChatMessage(props){\n  const {text, uid, photoURL} = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return(\n    <div className={'message ${messageClass}'}>\n    <img src={photoURL} />\n  <p>{text}</p>\n  </div>\n  )\n}\n\nexport default App;\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"25","replacedBy":"29"},{"ruleId":"27","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":26,"column":7,"nodeType":"33","messageId":"34","endLine":26,"endColumn":16},{"ruleId":"31","severity":1,"message":"35","line":111,"column":9,"nodeType":"33","messageId":"34","endLine":111,"endColumn":21},{"ruleId":"36","severity":1,"message":"37","line":114,"column":21,"nodeType":"38","messageId":"39","endLine":114,"endColumn":46},{"ruleId":"40","severity":1,"message":"41","line":115,"column":5,"nodeType":"42","endLine":115,"endColumn":27},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],["43"],["44"],"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","'messageClass' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]